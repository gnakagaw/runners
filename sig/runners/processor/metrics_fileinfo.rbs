module Runners
  class Processor::MetricsFileInfo < Processor
    class SchemaClass < StrongJSON
      def issue: () -> StrongJSON::Type::Object[untyped]
    end
    Schema: SchemaClass

    private

    def generate_issue: (Pathname)-> Issue

    def lines_of_code: () -> Hash[Pathname, Integer]

    def analyze_lines_of_code: (Array[Pathname]) -> void

    def last_committed_at: () -> Hash[Pathname, String]

    def analyze_last_committed_at: (Array[Pathname]) -> void

    def text_files: () -> Set[Pathname]

    def text_file?: (Pathname) -> bool
  end
end
