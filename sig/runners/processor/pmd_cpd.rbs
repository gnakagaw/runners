module Runners
  class Processor::PmdCpd < Processor
    include Java

    class SchemaClass < StrongJSON
      def available_languages: () -> StrongJSON::Type::Enum[untyped]
      def runner_config: () -> StrongJSON::Type::Object[untyped]
      def issue: () -> StrongJSON::Type::Object[untyped]
    end
    Schema: SchemaClass

    DEFAULT_MINIMUM_TOKENS: Integer
    DEFAULT_FILES: String
    DEFAULT_LANGUAGE: Array[String]

    attr_accessor force_option_skip_lexical_errors: bool

    private

    def raise_warnings: (String) -> void

    def construct_result: (String) { (Issue) -> void } -> void

    type fileinfo = { id: String, path: Pathname, location: Location }

    def to_fileinfo: (REXML::Element) -> fileinfo

    def create_issue_object: (REXML::Element, Array[fileinfo]) -> Hash[Symbol, untyped]

    def option_files: () -> Array[String]

    def option_encoding: () -> Array[String]

    def option_minimum_tokens: () -> Array[String]

    def languages: () -> Array[String]

    def option_language: (String) -> Array[String]

    def option_skip_duplicate_files: () -> Array[String]

    def option_non_recursive: () -> Array[String]

    def option_skip_lexical_errors: () -> Array[String]

    def option_ignore_annotations: () -> Array[String]

    def option_ignore_identifiers: () -> Array[String]

    def option_ignore_literals: () -> Array[String]

    def option_ignore_usings: () -> Array[String]

    def option_no_skip_blocks: () -> Array[String]

    def option_skip_blocks_pattern: () -> Array[String]

    def cli_options: (String) -> Array[String]
  end
end
