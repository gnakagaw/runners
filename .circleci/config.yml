version: 2.1

commands:
  install_gems:
    steps:
      - restore_cache:
          keys:
            - v1-gems-{{ checksum "Gemfile.lock" }}
            - v1-gems-
      - run:
          name: Bundle install
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path=vendor/bundle
      - save_cache:
          paths:
            - vendor/bundle
          key: v1-gems-{{ checksum "Gemfile.lock" }}
  install_npm_and_yarn:
    steps:
      - run:
          name: Install Node.js
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
            curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install yarn

runner_job: &runner_job
  docker:
    - image: circleci/ruby:2.6.5
  steps:
    - checkout
    - install_gems
    - setup_remote_docker
    - run: echo 'export TAG="${CIRCLE_TAG:-${CIRCLE_SHA1}}"' >> $BASH_ENV
    - run: bundle exec rake docker:build
    - run: bundle exec rake docker:smoke
    - deploy:
        command: |
          if [ -n "${CIRCLE_TAG}" ]; then
            bundle exec rake docker:push
          fi

jobs:
  test-base:
    docker:
      - image: circleci/ruby:2.6.5
    steps:
      - checkout
      - install_gems
      - install_npm_and_yarn
      - run: bundle exec rake test
      - run: bundle exec rake typecheck
      - run: bundle exec rake dockerfile:generate
      - run: bundle exec rake dockerfile:verify
  timeout_test:
    docker:
      - image: circleci/ruby:2.6.5
    steps:
      - checkout
      - install_gems
      - setup_remote_docker
      - run: bundle exec rake docker:timeout_test
  runner_rubocop:
    environment:
      ANALYZER: rubocop
    <<: *runner_job
  runner_rails_best_practices:
    environment:
      ANALYZER: rails_best_practices
    <<: *runner_job
  runner_reek:
    environment:
      ANALYZER: reek
    <<: *runner_job
  runner_goodcheck:
    environment:
      ANALYZER: goodcheck
    <<: *runner_job
  runner_querly:
    environment:
      ANALYZER: querly
    <<: *runner_job
  runner_brakeman:
    environment:
      ANALYZER: brakeman
    <<: *runner_job
  runner_haml_lint:
    environment:
      ANALYZER: haml_lint
    <<: *runner_job
  runner_scss_lint:
    environment:
      ANALYZER: scss_lint
    <<: *runner_job
  runner_code_sniffer:
    environment:
      ANALYZER: code_sniffer
    <<: *runner_job
  runner_phpmd:
    environment:
      ANALYZER: phpmd
    <<: *runner_job
  runner_phinder:
    environment:
      ANALYZER: phinder
    <<: *runner_job
  runner_checkstyle:
    environment:
      ANALYZER: checkstyle
    <<: *runner_job
  runner_pmd_java:
    environment:
      ANALYZER: pmd_java
    <<: *runner_job
  runner_javasee:
    environment:
      ANALYZER: javasee
    <<: *runner_job
  runner_eslint:
    environment:
      ANALYZER: eslint
    <<: *runner_job
  runner_coffeelint:
    environment:
      ANALYZER: coffeelint
    <<: *runner_job
  runner_jshint:
    environment:
      ANALYZER: jshint
    <<: *runner_job
  runner_stylelint:
    environment:
      ANALYZER: stylelint
    <<: *runner_job
  runner_tslint:
    environment:
      ANALYZER: tslint
    <<: *runner_job
  runner_tyscan:
    environment:
      ANALYZER: tyscan
    <<: *runner_job
  runner_flake8:
    environment:
      ANALYZER: flake8
    <<: *runner_job
  runner_misspell:
    environment:
      ANALYZER: misspell
    <<: *runner_job
  runner_go_vet:
    environment:
      ANALYZER: go_vet
    <<: *runner_job
  runner_golint:
    environment:
      ANALYZER: golint
    <<: *runner_job
  runner_gometalinter:
    environment:
      ANALYZER: gometalinter
    <<: *runner_job
  runner_swiftlint:
    environment:
      ANALYZER: swiftlint
    <<: *runner_job
  runner_cppcheck:
    environment:
      ANALYZER: cppcheck
    <<: *runner_job
  runner_ktlint:
    environment:
      ANALYZER: ktlint
    <<: *runner_job
  runner_shellcheck:
    environment:
      ANALYZER: shellcheck
    <<: *runner_job
  runner_cpplint:
    environment:
      ANALYZER: cpplint
    <<: *runner_job
  runner_hadolint:
    environment:
      ANALYZER: hadolint
    <<: *runner_job
  runner_fxcop_analyzers:
    environment:
      ANALYZER: fxcop_analyzers
    <<: *runner_job

workflows:
  version: 2
  build:
    jobs:
      - test-base
      - timeout_test
      - runner_rubocop: { filters: { tags: { only: /.*/ } } }
      - runner_rails_best_practices: { filters: { tags: { only: /.*/ } } }
      - runner_reek: { filters: { tags: { only: /.*/ } } }
      - runner_goodcheck: { filters: { tags: { only: /.*/ } } }
      - runner_querly: { filters: { tags: { only: /.*/ } } }
      - runner_brakeman: { filters: { tags: { only: /.*/ } } }
      - runner_haml_lint: { filters: { tags: { only: /.*/ } } }
      - runner_scss_lint: { filters: { tags: { only: /.*/ } } }
      - runner_code_sniffer: { filters: { tags: { only: /.*/ } } }
      - runner_phpmd: { filters: { tags: { only: /.*/ } } }
      - runner_phinder: { filters: { tags: { only: /.*/ } } }
      - runner_checkstyle: { filters: { tags: { only: /.*/ } } }
      - runner_pmd_java: { filters: { tags: { only: /.*/ } } }
      - runner_javasee: { filters: { tags: { only: /.*/ } } }
      - runner_eslint: { filters: { tags: { only: /.*/ } } }
      - runner_coffeelint: { filters: { tags: { only: /.*/ } } }
      - runner_jshint: { filters: { tags: { only: /.*/ } } }
      - runner_stylelint: { filters: { tags: { only: /.*/ } } }
      - runner_tslint: { filters: { tags: { only: /.*/ } } }
      - runner_tyscan: { filters: { tags: { only: /.*/ } } }
      - runner_flake8: { filters: { tags: { only: /.*/ } } }
      - runner_misspell: { filters: { tags: { only: /.*/ } } }
      - runner_go_vet: { filters: { tags: { only: /.*/ } } }
      - runner_golint: { filters: { tags: { only: /.*/ } } }
      - runner_gometalinter: { filters: { tags: { only: /.*/ } } }
      - runner_swiftlint: { filters: { tags: { only: /.*/ } } }
      - runner_cppcheck: { filters: { tags: { only: /.*/ } } }
      - runner_ktlint: { filters: { tags: { only: /.*/ } } }
      - runner_shellcheck: { filters: { tags: { only: /.*/ } } }
      - runner_cpplint: { filters: { tags: { only: /.*/ } } }
      - runner_hadolint: { filters: { tags: { only: /.*/ } } }
      - runner_fxcop_analyzers: { filters: { tags: { only: /.*/ } } }
