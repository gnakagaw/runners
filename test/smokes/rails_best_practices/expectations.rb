s = Runners::Testing::Smoke

default_version = "1.20.0"

s.add_test(
  "sandbox_rails",
  type: "success",
  issues: [
    {
      path: "db/schema.rb",
      location: { start_line: 25 },
      id: "RailsBestPractices::Reviews::AlwaysAddDbIndexReview",
      message: "always add db index (users => [group_id])",
      links: %w[https://rails-bestpractices.com/posts/2010/07/24/always-add-db-index/],
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "98994155753561cf98e9e06cdc415ae12f92d2bb", original_line: 25, final_line: 25
      }
    },
    {
      path: "app/models/user.rb",
      location: { start_line: 3 },
      id: "RailsBestPractices::Reviews::DefaultScopeIsEvilReview",
      message: "default_scope is evil",
      links: %w[https://rails-bestpractices.com/posts/2013/06/15/default_scope-is-evil/],
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "582bbb9e448787fead615d16e842089477b84e81", original_line: 3, final_line: 3
      }
    },
    {
      path: "app/helpers/users_helper.rb",
      location: { start_line: 1 },
      id: "RailsBestPractices::Reviews::RemoveEmptyHelpersReview",
      message: "remove empty helpers",
      links: %w[https://rails-bestpractices.com/posts/2011/04/09/remove-empty-helpers/],
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "f8ea15a887906570f24c7ea0fafae3ebbc57cd3f", original_line: 1, final_line: 1
      }
    },
    {
      path: "config/routes.rb",
      location: { start_line: 3 },
      id: "RailsBestPractices::Reviews::RestrictAutoGeneratedRoutesReview",
      message: "restrict auto-generated routes users (except: [:new, :create])",
      links: %w[https://rails-bestpractices.com/posts/2011/08/19/restrict-auto-generated-routes/],
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "71c527a4577a4addd9131807a83a0ab943db59ec", original_line: 3, final_line: 3
      }
    }
  ],
  analyzer: { name: "Rails Best Practices", version: default_version }
)

s.add_test(
  "broken_sideci_yml",
  type: "failure",
  analyzer: :_,
  message: "`linter.rails_best_practices.exclude` value in `sideci.yml` is invalid"
)

s.add_test(
  "valid_sideci_yml",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: default_version },
  issues: [
    {
      message: "Don't rescue Exception",
      links: %w[https://rails-bestpractices.com/posts/2012/11/01/don-t-rescue-exception-rescue-standarderror/],
      id: "RailsBestPractices::Reviews::NotRescueExceptionReview",
      path: "a.rb",
      location: { start_line: 5 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "447fdabd4b419ac0393028c89e4f596d888c3600", original_line: 5, final_line: 5
      }
    }
  ],
  warnings: [
    {
      message: /The `linter.rails_best_practices.options` option is deprecated/,
      file: "sideci.yml"
    }
  ]
)

s.add_test(
  "template_engine",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: "1.19.1" },
  issues: [
    {
      message: "simplify render in views",
      links: %w[https://rails-bestpractices.com/posts/2010/12/04/simplify-render-in-views/],
      id: "RailsBestPractices::Reviews::SimplifyRenderInViewsReview",
      path: "app/views/index.html.erb",
      location: { start_line: 2 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "217e22edefa9ea4f0760e392ca561336a35aa70a", original_line: 2, final_line: 2
      }
    },
    {
      message: "simplify render in views",
      links: %w[https://rails-bestpractices.com/posts/2010/12/04/simplify-render-in-views/],
      id: "RailsBestPractices::Reviews::SimplifyRenderInViewsReview",
      path: "app/views/index.html.haml",
      location: { start_line: 2 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "61c189f0538de4fecb11e837da23a468287153e4", original_line: 2, final_line: 2
      }
    },
    {
      message: "simplify render in views",
      links: %w[https://rails-bestpractices.com/posts/2010/12/04/simplify-render-in-views/],
      id: "RailsBestPractices::Reviews::SimplifyRenderInViewsReview",
      path: "app/views/index.html.slim",
      location: { start_line: 2 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "61c189f0538de4fecb11e837da23a468287153e4", original_line: 2, final_line: 2
      }
    }
  ]
)

s.add_test(
  "lowest_deps",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: "1.19.1" },
  issues: [
    {
      message: "Don't rescue Exception",
      links: %w[https://rails-bestpractices.com/posts/2012/11/01/don-t-rescue-exception-rescue-standarderror/],
      id: "RailsBestPractices::Reviews::NotRescueExceptionReview",
      path: "app/models/box.rb",
      location: { start_line: 5 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "447fdabd4b419ac0393028c89e4f596d888c3600", original_line: 5, final_line: 5
      }
    }
  ]
)

s.add_test(
  "slim_with_sass",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: "1.19.1" },
  issues: [
    {
      message: "simplify render in views",
      links: %w[https://rails-bestpractices.com/posts/2010/12/04/simplify-render-in-views/],
      id: "RailsBestPractices::Reviews::SimplifyRenderInViewsReview",
      path: "app/views/index.html.slim",
      location: { start_line: 2 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "61c189f0538de4fecb11e837da23a468287153e4", original_line: 2, final_line: 2
      }
    },
    {
      message: "simplify render in views",
      links: %w[https://rails-bestpractices.com/posts/2010/12/04/simplify-render-in-views/],
      id: "RailsBestPractices::Reviews::SimplifyRenderInViewsReview",
      path: "app/views/show.html.slim",
      location: { start_line: 2 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "ad616b1216619ed7daec388fdd0c2f0d890f6ffb", original_line: 2, final_line: 2
      }
    }
  ]
)

s.add_test(
  "sassc_v1",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: "1.19.1" },
  issues: [
    {
      message: "simplify render in views",
      links: %w[https://rails-bestpractices.com/posts/2010/12/04/simplify-render-in-views/],
      id: "RailsBestPractices::Reviews::SimplifyRenderInViewsReview",
      path: "app/views/index.html.slim",
      location: { start_line: 2 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "61c189f0538de4fecb11e837da23a468287153e4", original_line: 2, final_line: 2
      }
    }
  ]
)

s.add_test(
  "unsupported",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: default_version },
  issues: [
    {
      message: "Don't rescue Exception",
      links: %w[https://rails-bestpractices.com/posts/2012/11/01/don-t-rescue-exception-rescue-standarderror/],
      id: "RailsBestPractices::Reviews::NotRescueExceptionReview",
      path: "app/models/box.rb",
      location: { start_line: 5 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "447fdabd4b419ac0393028c89e4f596d888c3600", original_line: 5, final_line: 5
      }
    }
  ],
  warnings: [
    {
      message: <<~MESSAGE.strip,
        `rails_best_practices #{default_version}` is installed instead of `1.16.0` in your `Gemfile.lock`.
        Because `1.16.0` does not satisfy our constraints `>= 1.19.1, < 2.0`.

        If you want to use a different version of `rails_best_practices`, please do either:
        - Update your `Gemfile.lock` to satisfy the constraint
        - Set the `linter.rails_best_practices.gems` option in your `sider.yml`
      MESSAGE
      file: nil
    }
  ]
)

s.add_test(
  "include_dirs_by_default",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: default_version },
  issues: [
    {
      message: "Don't rescue Exception",
      links: %w[https://rails-bestpractices.com/posts/2012/11/01/don-t-rescue-exception-rescue-standarderror/],
      id: "RailsBestPractices::Reviews::NotRescueExceptionReview",
      path: "vendor/a.rb",
      location: { start_line: 3 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "e9e0a3f0be9cd433b81aaef2ab5775fedb5832cf", original_line: 3, final_line: 3
      }
    }
  ]
)

s.add_test(
  "include_dirs_with_config",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: default_version },
  issues: [
    {
      message: "Don't rescue Exception",
      links: %w[https://rails-bestpractices.com/posts/2012/11/01/don-t-rescue-exception-rescue-standarderror/],
      id: "RailsBestPractices::Reviews::NotRescueExceptionReview",
      path: "features/a.rb",
      location: { start_line: 3 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "e9e0a3f0be9cd433b81aaef2ab5775fedb5832cf", original_line: 3, final_line: 3
      }
    },
    {
      message: "Don't rescue Exception",
      links: %w[https://rails-bestpractices.com/posts/2012/11/01/don-t-rescue-exception-rescue-standarderror/],
      id: "RailsBestPractices::Reviews::NotRescueExceptionReview",
      path: "spec/a.rb",
      location: { start_line: 3 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "e9e0a3f0be9cd433b81aaef2ab5775fedb5832cf", original_line: 3, final_line: 3
      }
    },
    {
      message: "Don't rescue Exception",
      links: %w[https://rails-bestpractices.com/posts/2012/11/01/don-t-rescue-exception-rescue-standarderror/],
      id: "RailsBestPractices::Reviews::NotRescueExceptionReview",
      path: "test/a.rb",
      location: { start_line: 3 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "e9e0a3f0be9cd433b81aaef2ab5775fedb5832cf", original_line: 3, final_line: 3
      }
    }
  ]
)

s.add_test(
  "exclude_multiple",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: default_version },
  issues: [
    {
      message: "Don't rescue Exception",
      links: %w[https://rails-bestpractices.com/posts/2012/11/01/don-t-rescue-exception-rescue-standarderror/],
      id: "RailsBestPractices::Reviews::NotRescueExceptionReview",
      path: "foo.rb",
      location: { start_line: 3 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "e9e0a3f0be9cd433b81aaef2ab5775fedb5832cf", original_line: 3, final_line: 3
      }
    }
  ]
)

s.add_test(
  "invalid_line_number",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: default_version },
  issues: [
    {
      message: "move code into model (article use_count > 2)",
      links: %w[https://rails-bestpractices.com/posts/2010/07/24/move-code-into-model/],
      id: "RailsBestPractices::Reviews::MoveCodeIntoModelReview",
      path: "app/views/articles/show.html.erb",
      location: { start_line: 1 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "c9a4160e27053d6c94f1fd150c987209de514948", original_line: 1, final_line: 1
      }
    },
    {
      message: "move code into model (article use_count > 2)",
      links: %w[https://rails-bestpractices.com/posts/2010/07/24/move-code-into-model/],
      id: "RailsBestPractices::Reviews::MoveCodeIntoModelReview",
      path: "app/views/articles/show.html.erb",
      location: { start_line: 5 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "7400224de590d513ee50d93636c719fb9488df59", original_line: 5, final_line: 5
      }
    },
    {
      message: "move code into model (post use_count > 2)",
      links: %w[https://rails-bestpractices.com/posts/2010/07/24/move-code-into-model/],
      id: "RailsBestPractices::Reviews::MoveCodeIntoModelReview",
      path: "app/views/articles/show.html.erb",
      location: { start_line: 9 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "d1b3976f70a20f4b57661af2ffdb76dc27004610", original_line: 9, final_line: 9
      }
    },
    {
      message: "move code into model (Time use_count > 2)",
      links: %w[https://rails-bestpractices.com/posts/2010/07/24/move-code-into-model/],
      id: "RailsBestPractices::Reviews::MoveCodeIntoModelReview",
      path: "app/views/articles/show.html.erb",
      location: { start_line: 13 },
      object: nil,
      git_blame_info: {
        commit: :_, line_hash: "599ff60112099528b8b997ccc1075dc439b789ec", original_line: 13, final_line: 13
      }
    }
  ]
)

s.add_test(
  "no_issues",
  type: "success",
  analyzer: { name: "Rails Best Practices", version: default_version },
  issues: []
)
